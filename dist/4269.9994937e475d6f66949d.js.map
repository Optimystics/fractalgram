{"version":3,"file":"4269.9994937e475d6f66949d.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/useUserStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: (ApiUser | ApiChat)[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  getTopicLink,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadUserStories,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n    loadUserStories({ userId });\n  }, [userId]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, activeChatUsernames, topicId, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n    };\n  },\n)(ChatExtra));\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport {\n  DEBUG, EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseMessageInput, { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseMessageInput';\nimport buildAttachment from '../helpers/buildAttachment';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nfunction preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) return;\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseMessageInput(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: number } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        draft: parseMessageInput(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft));\n\n    const customEmojiIds = draft.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: number,\n  type: MessageListType,\n  draft?: ApiFormattedText,\n  editingDraft?: ApiFormattedText,\n  replyingToId?: number,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseMessageInput(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseMessageInput(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseMessageInput(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/i;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img src={iconSvg} alt=\"\" className={buildClassName(styles.image, !isTouchScreen && styles.compact)} />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Portal from '../../ui/Portal';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  chatId: string;\n  threadId?: number;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => callAttachBot({\n        bot,\n        chatId,\n        threadId,\n      })}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {menuPosition && (\n        <Portal>\n          <Menu\n            isOpen={isMenuOpen}\n            positionX=\"right\"\n            style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n            className=\"bot-attach-context-menu\"\n            autoClose\n            onClose={handleCloseMenu}\n            onCloseAnimationEnd={handleCloseAnimationEnd}\n          >\n            <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n          </Menu>\n        </Portal>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  theme: ISettings['theme'];\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  theme,\n  shouldCollectDebugLogs,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.peerTypes.includes('self')) {\n          return true;\n        }\n        return bot.peerTypes.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage, ApiUser } from '../../../api/types';\n\nimport { isUserId, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectReplyingToId,\n  selectSender,\n  selectTabState,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport EmbeddedMessage from '../../common/EmbeddedMessage';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyingToId?: number;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiUser | ApiChat;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyingToId,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  onClear,\n}) => {\n  const {\n    setReplyingToId,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyingToId || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [forwardedMessagesCount],\n    forwardedMessagesCount ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(canAnimate && isShown, undefined, !shouldAnimate, undefined, !shouldAnimate);\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      setReplyingToId({ messageId: undefined });\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n\n  const leftIcon = useMemo(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      return 'icon-reply';\n    }\n    if (editingId) {\n      return 'icon-edit';\n    }\n    if (isForwarding) {\n      return 'icon-forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, replyingToId, shouldForceShowEditing]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className=\"ComposerEmbeddedMessage_inner\">\n        <div className=\"embedded-left-icon\">\n          <i className={buildClassName('icon', leftIcon)} />\n        </div>\n        <EmbeddedMessage\n          className=\"inside-input\"\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={editingId ? lang('EditMessage') : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          hasContextMenu={isForwarding && !isContextMenuDisabled}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    let message: ApiMessage | undefined;\n    if (replyingToId && !shouldForceShowEditing) {\n      message = selectChatMessage(global, chatId, replyingToId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiChat | ApiUser | undefined;\n    if (replyingToId && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && !forwardInfo?.hiddenUserName) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = isUserId(fromChatId!) ? selectUser(global, fromChatId!) : selectChat(global, fromChatId!);\n      }\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    return {\n      replyingToId,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseMessageInput(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList, MessageListType, TabState,\n} from '../../global/types';\nimport type { IAnchorPosition, InlineBotSettings, ISettings } from '../../types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectReplyingToId,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStory,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseMessageInput from '../../util/parseMessageInput';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: number;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  onDropHide?: NoneToVoidFunction;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    replyingToId?: number;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst REACTION_SIZE = 1.5 * REM;\nconst HEART_REACTION: ApiReaction = {\n  emoticon: '❤',\n};\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  replyingToId,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openChat,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n    replyingToId,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        storyUserId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(requestedDraftText);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openChat({\n      id: chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = (isComposerHasFocus || isReactionPickerOpen)\n    && isInStoryViewer && !isAttachMenuOpen && !isSymbolMenuOpen;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList!);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      storyUserId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({ userId: chatId, storyId: storyId!, reaction });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = mainButtonState === MainButtonState.Edit\n    ? handleEditComplete\n    : mainButtonState === MainButtonState.Schedule ? handleSendScheduled\n      : handleSend;\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className=\"message-input-wrapper\">\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang('Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && !isSentStoryReactionHeart ? (\n            <ReactionStaticEmoji\n              reaction={sentStoryReaction}\n              availableReactions={availableReactions}\n              size={REACTION_SIZE}\n            />\n          ) : (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n\n    const story = storyId && selectUserStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      replyingToId,\n      draft: selectDraft(global, chatId, threadId),\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiUser,\n} from '../../api/types';\nimport type { ChatTranslatedMessages } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  getUserColorKey,\n  isActionMessage,\n  isMessageTranslatable,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getPictogramDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useThumbnail from '../../hooks/useThumbnail';\nimport useMessageTranslation from '../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../middle/ActionMessage';\nimport MediaSpoiler from './MediaSpoiler';\nimport MessageSummary from './MessageSummary';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  message?: ApiMessage;\n  sender?: ApiUser | ApiChat;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  hasContextMenu?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  sender,\n  title,\n  customText,\n  isProtected,\n  noUserColors,\n  hasContextMenu,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : message?.forwardInfo?.hiddenUserName;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        sender && !noUserColors && `color-${getUserColorKey(sender)}`,\n      )}\n      onClick={message && handleClick}\n      onMouseDown={message && handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      <div className=\"message-text\">\n        <p dir=\"auto\">\n          {!message ? (\n            customText || NBSP\n          ) : isActionMessage(message) ? (\n            <ActionMessage\n              message={message}\n              isEmbedded\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          ) : (\n            <MessageSummary\n              lang={lang}\n              message={message}\n              noEmoji={Boolean(mediaThumbnail)}\n              translatedText={translatedText}\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          )}\n        </p>\n        <div className=\"message-title\" dir=\"auto\">{renderText(senderTitle || title || NBSP)}</div>\n      </div>\n      {hasContextMenu && <i className=\"embedded-more icon icon-more\" />}\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedMessage;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg: any;\n  className?: string;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  isSavedMessages,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, forceShowSelf }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  onEmojiStatusClick,\n  storyViewerOrigin,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon icon-${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-user\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) return;\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  chatId?: string;\n  userId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  userId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          userId: userId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n    || (subject === 'story' && (!storyId || !userId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageKey,\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          withStory={user && !user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-user\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useUserStoriesPolling from '../../../hooks/polling/useUserStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  className?: string;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const isArchived = folderType === 'archived';\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  useUserStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiFormattedText, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTopic, ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { Thread } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {Boolean(lastMessage.replyToStoryId) && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { getMessageHtmlId, isChatChannel } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: number;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(message.chatId, message.replyToMessageId, targetMessage);\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti();\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    !isGift && !isSuggestedAvatar && 'in-one-row',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && <span className=\"action-message-content\">{renderContent()}</span>}\n      {isGift && renderGift()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar\n          message={message}\n          renderContent={renderContent}\n        />\n      )}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, replyToMessageId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = replyToMessageId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n    const premiumGiftSticker = global.premiumGifts?.stickers?.[0];\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isUserId(chatId) ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadUserStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadUserStoriesByIds({ userId: story.userId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      userId: story!.userId,\n      storyId: story!.id,\n      isSingleUser: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <img\n          src={mediaUrl}\n          alt=\"\"\n          className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n        />\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  canSendReaction, getReactionUniqueKey, isSameReaction, sortReactions,\n} from '../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n  className?: string;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n  className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.userId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent-bordered\"\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir=\"auto\"\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewStory';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => animateScroll(\n        messagesContainer,\n        elementRef.current!,\n        isToBottom ? 'end' : 'centerOrTop',\n        FOCUS_MARGIN,\n        focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n        focusDirection,\n        undefined,\n        isResizingContainer,\n        true,\n      );\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  user: ApiUser;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ user, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useStoryPreloader(user.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-user-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ userId: user.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: user.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: user.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: user.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: user.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchiveUser = useLastCallback(() => {\n    toggleStoriesHidden({ userId: user.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      tabIndex={0}\n      className={styles.user}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={user}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, user.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {user.isSelf ? lang('MyStory') : getUserFirstOrLastName(user)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-user-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {user.isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuItem onClick={handleOpenChat} icon=\"message\">\n                {lang('SendMessageTitle')}\n              </MenuItem>\n              <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                {lang('StoryList.Context.ViewProfile')}\n              </MenuItem>\n              <MenuItem\n                onClick={handleArchiveUser}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedUserIds: string[];\n  usersById: Record<string, ApiUser>;\n}\n\nfunction StoryRibbon({\n  isArchived, className, orderedUserIds, usersById, isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedUserIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedUserIds.map((userId) => {\n        const user = usersById[userId];\n\n        if (!user) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={userId}\n            user={user}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedUserIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n\n    return {\n      orderedUserIds: isArchived ? archived : active,\n      usersById,\n    };\n  },\n)(StoryRibbon));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedUserIds: string[];\n  isShown: boolean;\n  usersById: Record<string, ApiUser>;\n}\n\nconst PRELOAD_USERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedUserIds,\n  usersById,\n  canShow,\n  isShown,\n  isArchived,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const users = useMemo(() => {\n    if (orderedUserIds.length === 1) {\n      return [usersById[orderedUserIds[0]]];\n    }\n\n    return orderedUserIds\n      .map((id) => usersById[id])\n      .filter((user) => user && user.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedUserIds, usersById]);\n\n  const preloadUserIds = useMemo(() => {\n    return orderedUserIds.slice(0, PRELOAD_USERS);\n  }, [orderedUserIds]);\n  useStoryPreloader(preloadUserIds);\n\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(canShow && isShown, undefined, undefined, 'slow');\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {users.map((user) => (\n        <Avatar\n          key={user.id}\n          peer={user}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedUserIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedUserIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    usersById: global.users.byId,\n  };\n})(StoryToggler));\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectUserStories } from '../../../global/selectors';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { pause } from '../../../util/schedulers';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst USER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\nfunction useStoryPreloader(userIds: string[]): void;\nfunction useStoryPreloader(userId: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(userId: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    const preloadHashes = async (mediaHashes: { hash: string; format: ApiMediaFormat }[]) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format }) => {\n        mediaLoader.fetch(hash, format).then((result) => {\n          if (format === ApiMediaFormat.Progressive) {\n            preloadProgressive(result);\n          }\n        });\n      });\n    };\n\n    const userIds = Array.isArray(userId) ? userId : [userId];\n\n    userIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byUserId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, userId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n\n  return ids.slice(currentIndex - aroundAmount, currentIndex + aroundAmount);\n}\n\nfunction getPreloadMediaHashes(userId: string, storyId: number) {\n  const userStories = selectUserStories(getGlobal(), userId);\n  if (!userStories || !userStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(userStories.orderedIds, storyId, USER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: { hash: string; format: ApiMediaFormat }[] = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[userId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = userStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: story.content.video ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    // Alt video with different codec\n    if (story.content.altVideo) {\n      mediaHashes.push({ hash: getStoryMediaHash(story, 'full', true)!, format: ApiMediaFormat.Progressive });\n    }\n\n    preloadedStories[userId] = (preloadedStories[userId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n\n  setTimeout(() => {\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport { isUserBot } from '../../global/helpers';\nimport { selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst USER_LAST_POLLING_TIME = new Map<string, number>();\nlet USER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(USER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    userIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => USER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  USER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (USER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function useUserStoriesPolling(ids?: string[]) {\n  const users = useMemo(() => {\n    return ids?.map((id) => getGlobal().users.byId[id]).filter(Boolean);\n  }, [ids]);\n\n  const pollableUserIds = useMemo(() => {\n    const global = getGlobal();\n    return users?.filter((user) => {\n      const lastPollingTime = USER_LAST_POLLING_TIME.get(user.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      const status = selectUserStatus(global, user.id);\n      const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n      return !user.isContact && !user.isSelf && !isUserBot(user) && !user.isSupport && isStatusAvailable;\n    }).map((user) => user.id);\n  }, [users]);\n\n  useEffect(() => {\n    if (pollableUserIds?.length) {\n      pollableUserIds.forEach((id) => USER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollableUserIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { onBeforeUnload } from '../util/schedulers';\nimport useLastCallback from './useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_ELECTRON, SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  userId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadUserStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadUserStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ userId: userId!, storyIds: [storyId!] });\n    };\n  }, [storyId, userId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (userId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, userId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from '../global/helpers';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\nimport { IS_IOS } from './windowEnvironment';\nimport windowSize from './windowSize';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  const currentWindowSize = windowSize.get();\n  let initialTouchCenter = {\n    x: currentWindowSize.width / 2,\n    y: currentWindowSize.height / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    const newWindowSize = windowSize.get();\n    initialTouchCenter = {\n      x: newWindowSize.width / 2,\n      y: newWindowSize.height / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= windowSize.get().width - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    isZooming = true;\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1 || isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    requestMeasure(() => element.focus());\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"user\":\"vEyOaK0611BDq1vciUK5\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","onLoad","AnimatedIcon","decodeWaveform","encoded5bit","bitsCount","valuesCount","Math","floor","result","Array","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","interpolateArray","data","fitCount","peak","newData","springFactor","leftFiller","rightFiller","_data","_data$idx","_data2","idx","val","renderWaveform","canvas","spikes","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","getSeeklineSpikeAmounts","isMobile","withAvatar","MIN_SPIKES","matches","MAX_SPIKES","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","canvasRef","waveform","min","durationFactor","spikesCount","Uint8Array","useLayoutEffect","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","peers","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadUserStories","userId","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","deleteLastCharacterOutsideSelection","html","tempInput","document","createElement","contentEditable","position","top","innerHTML","body","appendChild","element","lastChild","textLength","textContent","range","createRange","selection","getSelection","setStart","setEnd","removeAllRanges","addRange","execCommand","removeChild","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","classList","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","Date","now","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","getAttachmentType","attachment","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseMessageInput","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","name","concat","isFrozen","URL_ENTITIES","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","source","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","bot","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","find","isMenuOpen","openMenu","closeMenu","menuPosition","setMenuPosition","handleContextMenu","rect","currentTarget","right","bottom","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","botId","isEnabled","MenuItem","customIcon","AttachBotIcon","onContextMenu","shortName","Portal","Menu","isOpen","positionX","autoClose","onClose","onCloseAnimationEnd","destructive","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","shouldCollectDebugLogs","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleDocumentSelect","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","peerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","disabled","AttachBotItem","BotCommandMenu","BotCommandTooltip","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","replyingToId","selectReplyingToId","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","sender","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","selectSender","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","onClear","setReplyingToId","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","leftIcon","customText","strippedMessage","strippedText","EmbeddedMessage","hasContextMenu","faded","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","VOICE_RECORDING_FILENAME","REACTION_SIZE","REM","HEART_REACTION","emoticon","_ref5","_ref6","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectUserStory","sentStoryReaction","sentReaction","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","draft","selectDraft","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","stealthMode","stories","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openChat","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isSentStoryReactionHeart","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","_prevState$chatId","_prevState$threadId","_prevState$chatId2","_prevState$threadId2","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","action","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","storyUserId","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","localOnly","handleSendAttachments","handleSend","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","withQuick","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionStaticEmoji","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","onMediaClick","dispatch","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleClick","thumbnailDataUri","actionIcon","isMessageDocumentVideo","isProtected","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","observeIntersectionForPlaying","mediaBlobUrl","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","getMessageIsSpoiler","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","handleMouseDown","useFastClick","getUserColorKey","getPictogramDimensions","srcUrl","MediaSpoiler","isVisible","renderPictogram","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","MessageOutgoingStatus","getMessageVideo","hasSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","withAnimation","clientY","shiftX","shiftY","Keys","Transition","activeKey","DEFAULT_TEXT","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","Checkbox","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","userStatus","selectUserStatus","statusIcon","withStory","emojiStatusSize","noEmojiStatus","adminMember","onEmojiStatusClick","storyViewerOrigin","customTitle","isOwner","storyViewerMode","withEmojiStatus","isUserOnline","getUserStatus","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","selectorToPreventScroll","onSwipe","direction","SwipeDirection","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","CustomEmoji","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","renderTextWithEntities","containerId","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","archiveUnreadCount","useFolderManagerForUnreadCounters","chatsCount","previewItems","arr","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","buttonClassName","withPortalForMenu","Badge","bySelector","Map","addCallback","selector","setter","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","get","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","AnimatedIconFromSticker","fluid","pill","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","containerRef","shouldIgnoreDragRef","isArchived","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","useUserStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","container","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","hash","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","isAction","useEnsureMessage","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","senderName","getMessageSenderName","replyToStoryId","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","isChatGroup","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","then","r","videoTs","videoSizes","videoStartTs","loopIndefinitely","withVideo","CropModal","textParts","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","premiumGiftSticker","premiumGifts","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isSuggestedAvatar","shouldShowConfettiRef","targetUsers","isContextMenuShown","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","months","play","noLoop","nonInteractive","ActionMessageSuggestedAvatar","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","menuButtonRef","setIsMenuOpen","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","buttonText","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","onTrigger","DropdownMenu","trigger","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","stickerSetInfo","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","withPortal","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","entry","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","parentNode","iterations","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","htmlBeforeSelection","regexText","regex","count","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","uncompressEmoji","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadUserStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSingleUser","isSingleStory","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","cn","createClassNameBuilder","noAppearAnimation","chosen","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isAnimationLoaded","markAnimationLoaded","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","AnimatedSticker","onEnded","forceAlways","enabledReactions","currentReactions","maxUniqueReactions","reactions","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","ReactionSelectorReaction","getReactionUniqueKey","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","previewMediaHash","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","drawImage","getImageData","getAppendixColorFromImage","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","_text$length","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","toggleStoriesHidden","useStoryPreloader","isDense","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchiveUser","hasUnreadStories","orderedUserIds","active","archived","isClosing","useHorizontalScroll","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadUserIds","withStorySolid","preloadedStories","canPreload","aroundStoryId","byUserId","mediaHashes","head","preload","autoplay","preloadProgressive","preloadHashes","userStories","selectUserStories","preloadIds","currentId","aroundAmount","findIdsAroundCurrentId","currentStoryId","altVideo","getPreloadMediaHashes","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","USER_LAST_POLLING_TIME","USER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","pollableUserIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","ms","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","makeMediaHandlers","controllerRef","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","trackId","originalDuration","trackType","handlers","onInit","shouldPlay","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","registerMediaSession","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","callback","lastCallback","onBeforeUnload","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","_dependencies","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","useInputFocusOnOpen","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","_signalRef$current","signalRef","effect","isFirstRun","dependency","subscribe","cleanupEffect","savedCallback","ConnectorClass","channel","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","shouldReturnMutationFn","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","index","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","getDistance","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","currentWindowSize","initialSwipeAxis","initialTouchCenter","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","touches","withCursor","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","newWindowSize","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","delta","zoom","onWheelZoom","isUserEvent","sign","dx","onWheelDrag","isNotPassive","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","naturalHeight","naturalWidth","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","contains","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","fillColor","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","INS","S","STRIKE","PRE","BLOCKQUOTE","withMarkdownLinks","skipMarkdown","parseMarkdown","parseMarkdownLinks","fixImageContent","trimShift","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","getEntityDataFromNode","hasChildNodes","parsedHtml","rawText","getEntityTypeFromNode","rawIndex","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}